services:
  exercises:
    build: ./exercises/exercise-microservice
    #    image: "${DOCKER_USERNAME}/exercises:latest"
    ports:
      - "8080:8080"
    container_name: exercises
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/kvbot
      spring.datasource.username: ${POSTGRES_USER}
      spring.datasource.password: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - db
      - redis
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3

  telegram:
    build: ./telegram
    #    image: "${DOCKER_USERNAME}/telegram:latest"
    volumes:
      - ./resources:/app/resources
    ports:
      - '8081:8081'
    restart: unless-stopped
    environment:
      telegram.bot.botName: ${TELEGRAM_BOT_NAME}
      telegram.bot.botToken: ${TELEGRAM_BOT_TOKEN}
      SPRING_PROFILES_ACTIVE: docker
    container_name: telegram
    depends_on:
      - exercises
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3

  db:
    image: postgres:latest
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: kvbot
      POSTGRES_SCHEMA: public
      STOP_ON_MIGRATION_FAILURE: "false"
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-broker-1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_MESSAGE_MAX_BYTES: 20971520      # Установка лимита на размер сообщения до 20 MB
      KAFKA_MAX_REQUEST_SIZE: 20971520       # Установка максимального размера запроса
    ports:
      - "9092:9092"

  kafka-broker-2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-broker-2
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_MESSAGE_MAX_BYTES: 20971520      # Установка лимита на размер сообщения до 20 MB
      KAFKA_MAX_REQUEST_SIZE: 20971520       # Установка максимального размера запроса
    ports:
      - "9093:9093"

  kafka-broker-3:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-broker-3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_MESSAGE_MAX_BYTES: 20971520      # Установка лимита на размер сообщения до 20 MB
      KAFKA_MAX_REQUEST_SIZE: 20971520       # Установка максимального размера запроса
    ports:
      - "9094:9094"

volumes:
  db-data:
    external: false
